# Generated by Django 5.1.3 on 2025-01-06 17:53

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('author', models.CharField(max_length=255)),
                ('isbn', models.CharField(max_length=13, unique=True)),
                ('publication_date', models.DateField()),
                ('publisher', models.CharField(blank=True, max_length=255, null=True)),
                ('genre', models.CharField(max_length=100)),
                ('language', models.CharField(default='English', max_length=50)),
                ('description', models.TextField(blank=True, null=True)),
                ('total_copies', models.PositiveIntegerField()),
                ('available_copies', models.PositiveIntegerField()),
                ('cover_image', models.ImageField(blank=True, null=True, upload_to='book_covers/')),
                ('pdf_file', models.FileField(blank=True, null=True, upload_to='book_pdfs/')),
                ('added_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='courses',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('course_type', models.CharField(choices=[('cs', 'Computer Science'), ('ai', 'Artificial Intelligence'), ('ml', 'Machine Learning'), ('ds', 'Data Science'), ('web_dev', 'Web Development'), ('app_dev', 'Mobile Application Development'), ('cybersec', 'Cyber Security'), ('ethical_hacking', 'Ethical Hacking'), ('software_dev', 'Software Development'), ('networking', 'Computer Networking'), ('cloud_computing', 'Cloud Computing'), ('iot', 'Internet of Things (IoT)'), ('blockchain', 'Blockchain Technology'), ('devops', 'DevOps'), ('bcom', 'Commerce'), ('mba', 'Master of Business Administration'), ('accounting', 'Accounting and Finance'), ('marketing', 'Marketing'), ('hrm', 'Human Resource Management'), ('entrepreneurship', 'Entrepreneurship'), ('economics', 'Economics'), ('literature', 'English Literature'), ('history', 'History'), ('philosophy', 'Philosophy'), ('psychology', 'Psychology'), ('sociology', 'Sociology'), ('political_science', 'Political Science'), ('linguistics', 'Linguistics'), ('fine_arts', 'Fine Arts'), ('music', 'Music'), ('film_studies', 'Film Studies'), ('design', 'Graphic Design'), ('math', 'Mathematics'), ('physics', 'Physics'), ('chemistry', 'Chemistry'), ('biology', 'Biology'), ('geology', 'Geology'), ('statistics', 'Statistics'), ('environmental_science', 'Environmental Science'), ('biotech', 'Biotechnology'), ('astrophysics', 'Astrophysics'), ('mech_eng', 'Mechanical Engineering'), ('civil_eng', 'Civil Engineering'), ('elec_eng', 'Electrical Engineering'), ('elec_comm_eng', 'Electronics and Communication Engineering'), ('chemical_eng', 'Chemical Engineering'), ('aero_eng', 'Aerospace Engineering'), ('biomed_eng', 'Biomedical Engineering'), ('robotics', 'Robotics Engineering'), ('medicine', 'Medicine'), ('nursing', 'Nursing'), ('pharmacy', 'Pharmacy'), ('dentistry', 'Dentistry'), ('physiotherapy', 'Physiotherapy'), ('public_health', 'Public Health'), ('law', 'Law'), ('criminology', 'Criminology'), ('forensics', 'Forensic Science'), ('international_relations', 'International Relations'), ('public_admin', 'Public Administration'), ('education', 'Education'), ('sports_science', 'Sports Science'), ('hospitality', 'Hospitality Management'), ('tourism', 'Tourism and Travel'), ('culinary_arts', 'Culinary Arts'), ('journalism', 'Journalism and Mass Communication'), ('fashion_design', 'Fashion Design'), ('animation', 'Animation'), ('agriculture', 'Agriculture'), ('marine_biology', 'Marine Biology'), ('veterinary', 'Veterinary Science'), ('ai_ml', 'Artificial Intelligence & Machine Learning')], max_length=50, verbose_name='Course Type')),
                ('image', models.ImageField(blank=True, null=True, upload_to='profile_images/', verbose_name='Profile Image')),
                ('title', models.CharField(max_length=100, verbose_name='Title')),
                ('name', models.CharField(default='cs', max_length=255, verbose_name='comp')),
            ],
        ),
        migrations.CreateModel(
            name='CoursesCategory',
            fields=[
                ('title', models.CharField(max_length=100)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Signup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(choices=[('mr', 'Mr.'), ('mrs', 'Mrs.'), ('ms', 'Ms.'), ('dr', 'Dr.'), ('prof', 'Prof.')], max_length=10, verbose_name='Title')),
                ('name', models.CharField(max_length=255, verbose_name='Full Name')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email')),
                ('phone_number', models.CharField(max_length=15, verbose_name='Phone Number')),
                ('course_type', models.CharField(choices=[('cs', 'Computer Science'), ('ai', 'Artificial Intelligence'), ('ml', 'Machine Learning'), ('ds', 'Data Science'), ('web_dev', 'Web Development'), ('app_dev', 'Mobile Application Development'), ('cybersec', 'Cyber Security'), ('ethical_hacking', 'Ethical Hacking'), ('software_dev', 'Software Development'), ('networking', 'Computer Networking'), ('cloud_computing', 'Cloud Computing'), ('iot', 'Internet of Things (IoT)'), ('blockchain', 'Blockchain Technology'), ('devops', 'DevOps'), ('bcom', 'Commerce'), ('mba', 'Master of Business Administration'), ('accounting', 'Accounting and Finance'), ('marketing', 'Marketing'), ('hrm', 'Human Resource Management'), ('entrepreneurship', 'Entrepreneurship'), ('economics', 'Economics'), ('literature', 'English Literature'), ('history', 'History'), ('philosophy', 'Philosophy'), ('psychology', 'Psychology'), ('sociology', 'Sociology'), ('political_science', 'Political Science'), ('linguistics', 'Linguistics'), ('fine_arts', 'Fine Arts'), ('music', 'Music'), ('film_studies', 'Film Studies'), ('design', 'Graphic Design'), ('math', 'Mathematics'), ('physics', 'Physics'), ('chemistry', 'Chemistry'), ('biology', 'Biology'), ('geology', 'Geology'), ('statistics', 'Statistics'), ('environmental_science', 'Environmental Science'), ('biotech', 'Biotechnology'), ('astrophysics', 'Astrophysics'), ('mech_eng', 'Mechanical Engineering'), ('civil_eng', 'Civil Engineering'), ('elec_eng', 'Electrical Engineering'), ('elec_comm_eng', 'Electronics and Communication Engineering'), ('chemical_eng', 'Chemical Engineering'), ('aero_eng', 'Aerospace Engineering'), ('biomed_eng', 'Biomedical Engineering'), ('robotics', 'Robotics Engineering'), ('medicine', 'Medicine'), ('nursing', 'Nursing'), ('pharmacy', 'Pharmacy'), ('dentistry', 'Dentistry'), ('physiotherapy', 'Physiotherapy'), ('public_health', 'Public Health'), ('law', 'Law'), ('criminology', 'Criminology'), ('forensics', 'Forensic Science'), ('international_relations', 'International Relations'), ('public_admin', 'Public Administration'), ('education', 'Education'), ('sports_science', 'Sports Science'), ('hospitality', 'Hospitality Management'), ('tourism', 'Tourism and Travel'), ('culinary_arts', 'Culinary Arts'), ('journalism', 'Journalism and Mass Communication'), ('fashion_design', 'Fashion Design'), ('animation', 'Animation'), ('agriculture', 'Agriculture'), ('marine_biology', 'Marine Biology'), ('veterinary', 'Veterinary Science'), ('ai_ml', 'Artificial Intelligence & Machine Learning')], max_length=50, verbose_name='Course Type')),
                ('confirm_type', models.CharField(choices=[('by_phone', 'By Phone'), ('by_email', 'By Email')], max_length=20, verbose_name='Confirmation Type')),
                ('contact_hours', models.CharField(choices=[('4am-5am', '4:00 AM - 5:00 AM'), ('5am-6am', '5:00 AM - 6:00 AM'), ('6am-7am', '6:00 AM - 7:00 AM'), ('7am-8am', '7:00 AM - 8:00 AM'), ('8am-9am', '8:00 AM - 9:00 AM'), ('9am-10am', '9:00 AM - 10:00 AM'), ('10am-11am', '10:00 AM - 11:00 AM'), ('11am-12pm', '11:00 AM - 12:00 PM'), ('12pm-1pm', '12:00 PM - 1:00 PM'), ('1pm-2pm', '1:00 PM - 2:00 PM'), ('2pm-3pm', '2:00 PM - 3:00 PM'), ('3pm-4pm', '3:00 PM - 4:00 PM'), ('4pm-5pm', '4:00 PM - 5:00 PM'), ('5pm-6pm', '5:00 PM - 6:00 PM'), ('6pm-7pm', '6:00 PM - 7:00 PM'), ('7pm-8pm', '7:00 PM - 8:00 PM'), ('8pm-9pm', '8:00 PM - 9:00 PM'), ('9pm-10pm', '9:00 PM - 10:00 PM'), ('10pm-11pm', '10:00 PM - 11:00 PM'), ('11pm-12am', '11:00 PM - 12:00 AM')], max_length=20, verbose_name='Contact Hours')),
                ('agree_terms', models.BooleanField(default=False, verbose_name='Agree to Terms and Conditions')),
                ('image', models.ImageField(blank=True, null=True, upload_to='profile_images/', verbose_name='Profile Image')),
            ],
        ),
        migrations.CreateModel(
            name='Specialization',
            fields=[
                ('specialization_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('field', models.CharField(choices=[('Engineering', 'Engineering'), ('Science', 'Science'), ('Arts', 'Arts'), ('Business', 'Business'), ('Technology', 'Technology')], default='Technology', max_length=50)),
                ('popular_courses', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('phone_number', models.CharField(max_length=15)),
                ('course_type', models.CharField(max_length=100)),
                ('confirm_type', models.CharField(max_length=100)),
                ('contact_hours', models.CharField(max_length=50)),
                ('agree_terms', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='MyUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_number', models.CharField(max_length=15)),
                ('course_type', models.CharField(max_length=100)),
                ('confirm_type', models.CharField(max_length=100)),
                ('contact_hours', models.CharField(max_length=50)),
                ('agree_terms', models.BooleanField(default=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('client_name', models.CharField(blank=True, max_length=255, null=True)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('status', models.CharField(choices=[('Not Started', 'Not Started'), ('In Progress', 'In Progress'), ('Completed', 'Completed')], default='Not Started', max_length=50)),
                ('budget', models.DecimalField(decimal_places=2, max_digits=10)),
                ('expenses', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('progress_percentage', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('milestones', models.TextField(blank=True, null=True)),
                ('project_files', models.FileField(blank=True, null=True, upload_to='project_documents/')),
                ('related_links', models.TextField(blank=True, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('archived', models.BooleanField(default=False)),
                ('project_manager', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('team_members', models.ManyToManyField(blank=True, related_name='project_team_members', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['start_date'],
            },
        ),
        migrations.CreateModel(
            name='Instructor',
            fields=[
                ('instructor_id', models.AutoField(primary_key=True, serialize=False)),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True)),
                ('experience', models.IntegerField()),
                ('qualification', models.CharField(max_length=100)),
                ('employment_type', models.CharField(choices=[('Full-time', 'Full-time'), ('Part-time', 'Part-time'), ('Freelance', 'Freelance')], default='Full-time', max_length=20)),
                ('available_hours', models.CharField(blank=True, max_length=100, null=True)),
                ('location', models.CharField(blank=True, max_length=100, null=True)),
                ('rating', models.FloatField(default=0.0)),
                ('reviews', models.TextField(blank=True, null=True)),
                ('bio', models.TextField(blank=True, null=True)),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='instructors/profile_pictures/')),
                ('social_links', models.JSONField(blank=True, null=True)),
                ('date_joined', models.DateField(auto_now_add=True)),
                ('status', models.BooleanField(default=True)),
                ('course', models.ManyToManyField(related_name='COURSE_category', to='myschool.coursescategory')),
                ('specialize', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='myschool.coursescategory')),
                ('specialization', models.ManyToManyField(related_name='instructors', to='myschool.specialization')),
            ],
        ),
        migrations.CreateModel(
            name='Testimonial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('profession', models.CharField(max_length=100)),
                ('message', models.TextField()),
                ('image', models.ImageField(upload_to='testimonials/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(default='active', max_length=20)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
